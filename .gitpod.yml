## Learn more about this file at 'https://www.gitpod.io/docs/references/gitpod-yml'
##
## This '.gitpod.yml' file when placed at the root of a project instructs
## Gitpod how to prepare & build the project, start development environments
## and configure continuous prebuilds. Prebuilds when enabled builds a project
## like a CI server so you can start coding right away - no more waiting for
## dependencies to download and builds to finish when reviewing pull-requests
## or hacking on something new.
##
## With Gitpod you can develop software from any device (even iPads) via
## desktop or browser based versions of VS Code or any JetBrains IDE and
## customise it to your individual needs - from themes to extensions, you
## have full control.
##
## The easiest way to try out Gitpod is install the browser extenion:
## 'https://www.gitpod.io/docs/browser-extension' or by prefixing
## 'https://gitpod.io#' to the source control URL of any project.
##
## For example: 'https://gitpod.io#https://github.com/gitpod-io/gitpod'

## The optional 'additionalRepositories' key is an array of repositories
## which contains two properties which define the source control `url` to
## clone and the `checkoutLocation` of where the repository is cloned
## under `/workspaces`
##
## Learn more at 'https://www.gitpod.io/docs/multi-repo-workspaces'

#workspaceLocation: /workspace
#workspaceLocation: "."
checkoutLocation: /workspace
jetbrains:
  phpstorm:
    prebuilds:
      version: stable
#additionalRepositories:
#  - url: https://github.com/NVGallery/Frontoffice.git
#    # checkoutLocation is optional and relative to /workspaces.
#    # by default the location defaults to the repository name.
#    checkoutLocation: "front"
#  - url: https://github.com/NVGallery/Backoffice.git
#    # checkoutLocation is optional and relative to /workspaces.
#    # by default the location defaults to the repository name.
#    checkoutLocation: "back"

## The 'tasks' section defines how Gitpod prepares and builds this project
## or how Gitpod can start development servers. With Gitpod, there are three
## types of tasks:
##
## - before: Use this for tasks that need to run before init and before command.
## - init: Use this to configure prebuilds of heavy-lifting tasks such as
##         downloading dependencies or compiling source code.
## - command: Use this to start your database or application when the workspace starts.
##
## Learn more about these tasks at 'https://www.gitpod.io/docs/config-start-tasks'

tasks:
  - name: build api
    # change working directory as per configured in `checkoutLocation`
    # which is configured above as `/workspaces/backend`
    init: |
      
      git clone https://github.com/NVGallery/Frontoffice.git front 
      git clone https://github.com/NVGallery/Core-API.git api
      git clone https://github.com/NVGallery/Backoffice.git back
      
      ls -l 
      docker network create nv-monitoring-network
      
      cd /workspace/api
      docker-compose -f docker-compose.yml -f docker-compose.local.yml build --build-arg APP_ENV=dev
      
      cd /workspace/back/app
      composer install --prefer-dist --no-scripts  --ignore-platform-reqs
      cd ..
      yarn install
      yarn build
      docker-compose -f docker-compose.yml -f docker-compose.local.yml build --build-arg APP_ENV=dev
     
      cd /workspace/front/app
      composer install --prefer-dist --no-scripts  --ignore-platform-reqs
      cd ..
      yarn install
      yarn build
      docker-compose -f docker-compose.yml -f docker-compose.local.yml build --build-arg APP_ENV=dev


    command: |
      cd /workspace/api
      make docker-up

      cd /workspace/back
      make docker-up
      make trad-download

      cd /workspace/front
      make docker-up

#workspaceLocation: /workspace